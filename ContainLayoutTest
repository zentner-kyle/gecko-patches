# HG changeset patch
# User Kyle Zentner <kzentner@mozilla.com>
# Parent  ed7a3461afd755bf3a08bb13493ededdef2c2eb7
Bug 1178895 - Patch 2: Test CSS 'contain: layout'.

diff --git a/layout/reftests/w3c-css/submitted/contain/contain-layout-inline-zero-001-ref.html b/layout/reftests/w3c-css/submitted/contain/contain-layout-inline-zero-001-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/w3c-css/submitted/contain/contain-layout-inline-zero-001-ref.html
@@ -0,0 +1,28 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <meta charset="utf-8">
+  <title>CSS Reftest Reference</title>
+  <link rel="author" title="Kyle Zentner" href="mailto:kzentner@mozilla.com">
+  <style>
+  body {
+    margin: 0;
+  }
+  .container-ref {
+    display: block;
+    background: red;
+    border: 1em solid green;
+    width: auto;
+    height: 0;
+  }
+  .inner-ref {
+    position: absolute;
+    left: 1em;
+  }
+  </style>
+</head>
+<body class="reftest-paint">
+  <span class="container-ref"><span class="inner-ref">Test span.</span></span>
+  <!--<div class="container-ref"><span class="inner-ref">Test span.</span></div>-->
+</body>
+</html>
diff --git a/layout/reftests/w3c-css/submitted/contain/contain-layout-inline-zero-001.html b/layout/reftests/w3c-css/submitted/contain/contain-layout-inline-zero-001.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/w3c-css/submitted/contain/contain-layout-inline-zero-001.html
@@ -0,0 +1,24 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <meta charset="utf-8">
+  <title>CSS Test: 'contain: layout' on inline element should cause the element
+    to become a block with zero height.</title>
+  <link rel="author" title="Kyle Zentner" href="mailto:kzentner@mozilla.com">
+  <link rel="help" href="http://www.w3.org/TR/css-containment-1/#containment-layout">
+  <link rel="match" href="layout-inline-zero-001-ref.html">
+  <style>
+  body {
+    margin: 0;
+  }
+  .container {
+    contain: layout;
+    background: red;
+    border: 1em solid green;
+  }
+  </style>
+</head>
+<body class="reftest-paint">
+  <span class="container">Test span.</span>
+</body>
+</html>
diff --git a/layout/reftests/w3c-css/submitted/contain/contain-layout-zero-001-ref.html b/layout/reftests/w3c-css/submitted/contain/contain-layout-zero-001-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/w3c-css/submitted/contain/contain-layout-zero-001-ref.html
@@ -0,0 +1,37 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <meta charset="utf-8">
+  <title>CSS Reftest Reference</title>
+  <link rel="author" title="Kyle Zentner" href="mailto:kzentner@mozilla.com">
+  <style>
+  body {
+    margin: 0;
+  }
+  .container {
+    background: red;
+    border: 1em solid green;
+    width: 100px;
+    height: 0;
+  }
+  </style>
+</head>
+<body class="reftest-paint">
+  <div class="fun">
+    <div>
+      This is some content before the contained element.
+    </div>
+    <div>
+      This is a parent of the contained element.
+      <div class="container">
+        <div>
+          Lorem ipsum dolor sit amet
+        </div>
+      </div>
+    </div>
+    <div>
+      This is some content after the contained element.
+    </div>
+  </div>
+</body>
+</html>
diff --git a/layout/reftests/w3c-css/submitted/contain/contain-layout-zero-001.html b/layout/reftests/w3c-css/submitted/contain/contain-layout-zero-001.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/w3c-css/submitted/contain/contain-layout-zero-001.html
@@ -0,0 +1,40 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <meta charset="utf-8">
+  <title>CSS Test: 'contain: layout' on auto sized block should cause the block
+    to be zero sized.</title>
+  <link rel="author" title="Kyle Zentner" href="mailto:kzentner@mozilla.com">
+  <link rel="help" href="http://www.w3.org/TR/css-containment-1/#containment-layout">
+  <link rel="match" href="layout-zero-001-ref.html">
+  <style>
+  body {
+    margin: 0;
+  }
+  .container {
+    contain: layout;
+    background: red;
+    border: 1em solid green;
+    width: 100px;
+  }
+  </style>
+</head>
+<body class="reftest-paint">
+  <div class="fun">
+    <div>
+      This is some content before the contained element.
+    </div>
+    <div>
+      This is a parent of the contained element.
+      <div class="container">
+        <div>
+          Lorem ipsum dolor sit amet
+        </div>
+      </div>
+    </div>
+    <div>
+      This is some content after the contained element.
+    </div>
+  </div>
+</body>
+</html>
diff --git a/layout/reftests/w3c-css/submitted/contain/reftest.list b/layout/reftests/w3c-css/submitted/contain/reftest.list
--- a/layout/reftests/w3c-css/submitted/contain/reftest.list
+++ b/layout/reftests/w3c-css/submitted/contain/reftest.list
@@ -5,8 +5,10 @@ default-preferences pref(layout.css.cont
 == contain-paint-containing-block-absolute-001.html contain-paint-containing-block-absolute-001-ref.html
 == contain-paint-containing-block-fixed-001.html contain-paint-containing-block-fixed-001-ref.html
 == contain-paint-formatting-context-float-001.html contain-paint-formatting-context-float-001-ref.html
 == contain-paint-formatting-context-margin-001.html contain-paint-formatting-context-margin-001-ref.html
 == contain-style-counter-increment-001.html contain-style-counter-increment-001-ref.html
 == contain-style-counter-insert-001.html contain-style-counter-insert-001-ref.html
 == contain-style-quote-001.html contain-style-quote-001-ref.html
 == contain-style-break-001.html contain-style-break-001-ref.html
+== contain-layout-zero-001.html contain-layout-zero-001-ref.html
+== contain-layout-inline-zero-001.html contain-layout-inline-zero-001-ref.html
diff --git a/layout/style/test/test_contain_layout_empty.html b/layout/style/test/test_contain_layout_empty.html
new file mode 100644
--- /dev/null
+++ b/layout/style/test/test_contain_layout_empty.html
@@ -0,0 +1,99 @@
+<!DOCTYPE HTML>
+<html class="reftest-wait">
+<head>
+  <meta charset="utf-8">
+  <title>CSS Test: 'contain: layout' on various elements causes them to act as
+    though they are empty</title>
+  <link rel="author" title="Kyle Zentner" href="mailto:kzentner@mozilla.com">
+  <link rel="help" href="http://www.w3.org/TR/css-containment-1/#containment-layout">
+  <script src=/tests/SimpleTest/SimpleTest.js></script>
+  <script type="text/javascript" src="/tests/SimpleTest/WindowSnapshot.js"></script>
+  <link rel=stylesheet href=/tests/SimpleTest/test.css>
+  <style>
+  .container {
+    contain: layout;
+    background: green;
+    margin: 15px;
+  }
+  .fake-container {
+    background: green;
+    margin: 15px;
+    contain: paint;
+  }
+  .contained {
+    width: 10px;
+    height: 10px;
+    background: blue;
+  }
+  .fake-contained {
+    width: 10px;
+    height: 10px;
+    background: blue;
+  }
+  </style>
+  <script class='testbody'>
+    SimpleTest.waitForExplicitFinish();
+    SimpleTest.requestLongerTimeout(3600);
+
+    var point = document.createElement('div')
+    var displays = ["inline", "block", "contents", "list-item",
+    "inline-block", "inline-table", "table", "table-cell", "table-column",
+    "table-column-group", "table-footer-group", "table-header-group",
+    "table-row", "table-row-group", "flex", "inline-flex", "grid",
+    "inline-grid", "ruby", "ruby-base", "ruby-text", "ruby-base-container",
+    "ruby-text-container ", "run-in"];
+    var outerIdx = 0;
+    var innerIdx = 0;
+    function tick() {
+      if (innerIdx === displays.length) {
+        outerIdx += 1;
+        innerIdx = 0;
+      } else {
+        innerIdx += 1;
+      }
+      if (outerIdx === displays.length) {
+        return;
+      }
+      var outerDisplay = displays[outerIdx];
+      var innerDisplay = displays[innerIdx];
+      var outerElem = document.createElement("div");
+      var innerElem = document.createElement("div");
+      outerElem.style.display = outerDisplay;
+      innerElem.style.display = innerDisplay;
+      outerElem.classList.add("container");
+      innerElem.classList.add("contained");
+      innerElem.textContent = "Lorem ipsum dolor sit amet";
+      outerElem.appendChild(innerElem);
+      var holder = document.getElementById("holder");
+      holder.appendChild(outerElem);
+      var realSnapshot = SpecialPowers.snapshotWindow(window);
+      outerElem.classList.remove("container");
+      innerElem.classList.remove("contained");
+      outerElem.classList.add("fake-container");
+      innerElem.classList.add("fake-contained");
+      outerElem.removeChild(innerElem);
+      outerElem.appendChild(point);
+      var rect = point.getBoundingClientRect();
+      outerElem.removeChild(point);
+      innerElem.style.position = "absolute";
+      innerElem.style.left = rect.x;
+      innerElem.style.top = rect.y;
+      holder.appendChild(innerElem);
+      var fakeSnapshot = SpecialPowers.snapshotWindow(window);
+      assertSnapshots(realSnapshot, fakeSnapshot, true, null,
+      outerDisplay + " / " + innerDisplay + " contain: layout", "faked contain:layout");
+      outerElem.parentNode.removeChild(outerElem);
+      innerElem.parentNode.removeChild(innerElem);
+      return true;
+    }
+    function doTest() {
+      while (tick()) { }
+      SimpleTest.executeSoon(SimpleTest.finish);
+    }
+  </script>
+</head>
+<body onload="doTest()">
+  <div id="holder">
+  </div>
+</body>
+</html>
