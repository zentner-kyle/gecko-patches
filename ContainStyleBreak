# HG changeset patch
# User Kyle Zentner <kzentner@mozilla.com>
# Parent  873ae9825310cb7e9fadb86dd9dfc9c3ac651237
Bug 1172087 - Patch 5: Implement page break behavior for "contain: style"

diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -5644,17 +5644,37 @@ nsCSSFrameConstructor::AddFrameConstruct
   bool canHavePageBreak =
     (aFlags & ITEM_ALLOW_PAGE_BREAK) &&
     aState.mPresContext->IsPaginated() &&
     !display->IsAbsolutelyPositionedStyle() &&
     !(bits & FCDATA_IS_TABLE_PART) &&
     !(bits & FCDATA_IS_SVG_TEXT);
 
   if (canHavePageBreak && display->mBreakBefore) {
-    AddPageBreakItem(aContent, aStyleContext, aItems);
+    // We would like canHavePageBreak to factor in the fact that having a
+    // 'contain: style' ancestor prevents us from having a page break.
+    // Unfortunately, the content containing the page break may be inserted
+    // dynamically, so there's no particularly efficient way to track if
+    // there's a 'contain: style' ancestor.
+
+    // In order to handle this correctly (but slowly), we scan upward to check
+    // if there are any 'contain: style' ancestors.
+    // Since this case is only hit during paginated reflow, it shouldn't have
+    // too large of a performance impact.
+    bool isContained = false;
+    for (nsIFrame *ancestor = aParentFrame; ancestor;
+         ancestor = ancestor->GetParent()) {
+      if (ancestor->StyleDisplay()->IsContainStyle()) {
+        isContained = true;
+        break;
+      }
+    }
+    if (!isContained) {
+      AddPageBreakItem(aContent, aStyleContext, aItems);
+    }
   }
 
   if (MOZ_UNLIKELY(bits & FCDATA_IS_CONTENTS)) {
     if (!GetDisplayContentsStyleFor(aContent)) {
       MOZ_ASSERT(styleContext->GetPseudo() || !isGeneratedContent,
                  "Should have had pseudo type");
       aState.mFrameManager->SetDisplayContents(aContent, styleContext);
     } else {
