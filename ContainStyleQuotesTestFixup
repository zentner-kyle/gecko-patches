# HG changeset patch
# User Kyle Zentner <kzentner@mozilla.com>
# Parent  b5eea98a8512c1a10d69c2ace48d79fc1359e0aa

diff --git a/layout/base/nsQuoteList.h b/layout/base/nsQuoteList.h
--- a/layout/base/nsQuoteList.h
+++ b/layout/base/nsQuoteList.h
@@ -87,46 +87,57 @@ public:
 #ifdef DEBUG
   void PrintChain();
 #endif
 };
 
 
 class nsQuotesManager {
 private:
-  struct RootTableEntry {
+  class RootTableEntry {
+    public:
     nsQuoteList mList;
     bool        mDirty;
+    public:
+    RootTableEntry()
+      : mList(nsQuoteList())
+      , mDirty(false) {}
   };
 
   nsClassHashtable<nsPtrHashKey<const nsIFrame>, RootTableEntry> mContainStyleRootLists;
 
 public:
 
   bool DestroyNodesFor(nsIFrame* aContainStyleRoot, nsIFrame* aFrame) {
     mContainStyleRootLists.Remove(aFrame);
     nsQuoteList* rootList = GetList(aContainStyleRoot, false);
     if (rootList) {
       return rootList->DestroyNodesFor(aFrame);
     }
     return false;
   }
 
   nsQuoteList* GetList(const nsIFrame* aContainStyleRoot, bool aShouldCreate = true) {
-    nsQuoteList* list = &mContainStyleRootLists.Get(aContainStyleRoot)->mList;
-    if (!list && aShouldCreate) {
-      RootTableEntry* entry = new RootTableEntry();
+    RootTableEntry* entry = mContainStyleRootLists.Get(aContainStyleRoot);
+    nsQuoteList* list = nullptr;
+    if (entry) {
+      list = &mContainStyleRootLists.Get(aContainStyleRoot)->mList;
+    } else if (aShouldCreate) {
+      entry = new RootTableEntry();
       list = &entry->mList;
       mContainStyleRootLists.Put(aContainStyleRoot, entry);
     }
     return list;
   }
 
   void MarkContainStyleRootDirty(const nsIFrame* aContainStyleRoot) {
-    mContainStyleRootLists.Get(aContainStyleRoot)->mDirty = true;
+    RootTableEntry* entry = mContainStyleRootLists.Get(aContainStyleRoot);
+    if (entry) {
+      entry->mDirty = true;
+    }
   }
 
   void RecalcDirty() {
     for (auto iter = mContainStyleRootLists.ConstIter(); !iter.Done(); iter.Next()) {
       RootTableEntry* entry = iter.Data();
       if (entry->mDirty) {
         entry->mDirty = false;
         entry->mList.RecalcAll();
diff --git a/layout/reftests/w3c-css/submitted/contain/contain-style-quote-002-ref.html b/layout/reftests/w3c-css/submitted/contain/contain-style-quote-002-ref.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/w3c-css/submitted/contain/contain-style-quote-002-ref.html
@@ -0,0 +1,25 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <meta charset="utf-8">
+  <title>CSS Reftest Reference</title>
+  <link rel="author" title="Kyle Zentner" href="mailto:zentner.kyle@gmail.com">
+  <style>
+  body {
+    margin: 2em;
+  }
+  .qopen:before {
+    content: open-quote;
+  }
+  .nqclose:after {
+    content: no-close-quote;
+  }
+  </style>
+</head>
+<body>
+  <p class="qopen nqclose">Outermost paragraph.</p>
+  <p class="qopen nqclose">Outer container.</p>
+  <p class="qopen">Inner container.</p>
+  <p class="qopen">Higher depth paragraph.</p>
+</body>
+</html>
diff --git a/layout/reftests/w3c-css/submitted/contain/contain-style-quote-002.html b/layout/reftests/w3c-css/submitted/contain/contain-style-quote-002.html
new file mode 100644
--- /dev/null
+++ b/layout/reftests/w3c-css/submitted/contain/contain-style-quote-002.html
@@ -0,0 +1,42 @@
+<!DOCTYPE HTML>
+<html class="reftest-wait">
+<head>
+  <meta charset="utf-8">
+  <title>CSS Test: 'contain: style' should scope quote "depth", even when the
+    quoted content is dynamically inserted</title>
+  <link rel="author" title="Kyle Zentner" href="mailto:zentner.kyle@gmail.com">
+  <link rel="help" href="http://www.w3.org/TR/css-containment-1/#containment-style">
+  <link rel="match" href="style-quote-002-ref.html">
+  <style>
+  body {
+    margin: 2em;
+  }
+  .container {
+    contain: style;
+  }
+  .qopen:before {
+    content: open-quote;
+  }
+  </style>
+  <script id="inner-template" type="template">
+    <div class="container">
+      <p class="qopen">Inner container.</p>
+      <p class="qopen">Higher depth paragraph.</p>
+    </div>
+  </script>
+  <script>
+    function doTest() {
+      document.getElementById('inner').innerHTML =
+        document.getElementById('inner-template').textContent;
+      document.documentElement.classList.remove("reftest-wait");
+    }
+  </script>
+</head>
+<body onload="doTest()">
+  <p class="qopen">Outermost paragraph.</p>
+  <div class="container">
+    <p class="qopen">Outer container.</p>
+    <div id="inner"></div>
+  </div>
+</body>
+</html>
diff --git a/layout/reftests/w3c-css/submitted/contain/reftest.list b/layout/reftests/w3c-css/submitted/contain/reftest.list
--- a/layout/reftests/w3c-css/submitted/contain/reftest.list
+++ b/layout/reftests/w3c-css/submitted/contain/reftest.list
@@ -16,10 +16,11 @@ default-preferences pref(layout.css.cont
 == contain-style-counter-scope-003.html contain-style-counter-scope-001-ref.html
 == contain-style-counter-scope-004.html contain-style-counter-scope-001-ref.html
 == contain-style-counter-scope-005.html contain-style-counter-scope-001-ref.html
 == contain-style-counter-scope-006.html contain-style-counter-scope-001-ref.html
 == contain-style-counter-scope-007.html contain-style-counter-scope-001-ref.html
 == contain-style-counter-scope-008.html contain-style-counter-scope-001-ref.html
 == contain-style-counter-scope-009.html contain-style-counter-scope-001-ref.html
 == contain-style-quote-001.html contain-style-quote-001-ref.html
+== contain-style-quote-002.html contain-style-quote-002-ref.html
 == contain-style-break-001.html contain-style-break-001-ref.html
 == contain-style-break-002.html contain-style-break-001-ref.html
